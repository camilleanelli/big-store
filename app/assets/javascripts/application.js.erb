// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or any plugin's vendor/assets/javascripts directory can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file. JavaScript code in this file should be added after the last require_* statement.
//
// Read Sprockets README (https://github.com/rails/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require jquery
//= require jquery_ujs
//= require tether
//= require bootstrap
//= require pagination
//= require_tree .

$(document).ready(function() {
  var applicationID = "<%= ENV['APPLICATION_ID'] %>";
  var apiKey = "<%= ENV['API_KEY'] %>";
  var indexName = 'big-store';
  var client = algoliasearch(applicationID, apiKey);

  var helper = algoliasearchHelper(client, indexName, { facets: ['category'] });
  helper.search();
  BigStore.attachPaginationListener(helper);

  helper.on('result', function(content) {
    renderFacetList(content);
    renderHits(content);
    BigStore.displayPagination(helper, content);
    infoResults(content);
    renderFacetSelect(content);
  });

  // trigger search results
  $('#search-box').on('keyup', debounce(function(e) {
    var currentSearchValue = $(this).val();
    helper.setQuery(currentSearchValue).search();
  }, 400));

  // debounce() function to limit number of queries
  //www.grafikart.fr/tutoriels/javascript/debounce-throttle-642
  function debounce(callback, delay){
    var timer;
    return function(){
      var args = arguments;
      var context = this;
      clearTimeout(timer);
      timer = setTimeout(function(){
          callback.apply(context, args);
      }, delay)
    }
  }

  //display categories list
  function renderFacetList(content) {
    $('#facet-list').html(function() {
      return $.map(content.getFacetValues('category'), function(facet) {
        var checkbox = $('<input type=checkbox>')
          .data('facet', facet.name)
          .attr('id', 'fl-' + facet.name);
        if(facet.isRefined) checkbox.attr('checked', 'checked');
        var label = $('<label>').html(facet.name + ' (' + facet.count + ')')
          .attr('for', 'fl-' + facet.name);
        return  $('<li>').append(checkbox).append(label);
      });
    });
  }


  //display the hits
  function renderHits(content) {
    $('#container').html(function() {
      if(content.nbHits > 0) {
        $('.categories-select, #info-results, .title-facet, #pagination, .result-select, #select-pages, #filter-select, .filter-select, #reset').css('display', 'block');
        return $.map(content.hits, function(hit) {
          return renderHit(hit);
       });
      }else {
        $('.categories-select, #info-results, .title-facet, #pagination, .result-select, #select-pages, #filter-select, .filter-select, #reset').css('display', 'none');
        return '<div class="text-center pd-100 col-sm-8 offset-xs-1"><p>Sorry, no apps found </p>' +
        '<br><p class="blank-state"> ❨╯°□°❩╯︵┻━┻</p></div>';
      }
    });
  }

  // html code for a hit
  function renderHit(hit) {
    return '<div class="hidden-xs-down hit-card col-xs-12 col-sm-6 col-md-4">'+ 
    '<a href="' + hit.link + '" target="_blank">' + 
      '<div class="ar-1-1 hit" style="background-image: url(\'https://placeimg.com/175/175/'+hit.name+'\');">'+
        '<div class="filter">'+
          '<p class="title-hit text-white">'+ hit._highlightResult.name.value.substring(0,20) +'</p>'+
            '<div class="details"><span class="label font-montserrat fs-11">'+ hit.category +'</span></div>'+
            '<div class="text-white link">Buy now!</div>' +
          '</div>'+
        '</div>' +
      '</a>' +
    '</div>' +
    '<div class="hidden-sm-up col-12 pd-top-20 results-mobile">' + 
      '<a href="' + hit.link + '" target="_blank">' +
        '<div class="row">' +   
          '<div class="col-2 img-hit-mobile" style="background-image: url(\'https://placeimg.com/100/100/'+hit.name+'\');">' + 
        '</div>' +
          '<div class="col-7">' + hit._highlightResult.name.value.substring(0,20) + 
            '<p class="color-font">Show more</p>' +
          '</div>' +
          '<div class="col-3"><span class="label font-montserrat fs-11">'+ hit.category +'</span></div>' +
        '</div>' + 
      '</a>' + 
    '</div>';
  }

  //display results by categories
  $('#facet-list').on('click', 'input[type=checkbox]', function(e) {
    var facetValue = $(this).data('facet');
    helper.toggleRefinement('category', facetValue).search();
  });

  // categories select for mobile
  function renderFacetSelect(content) {
    var categories = content.getFacetValues('category');
    var selectedCategory = (categories.length == 1) ?  "selected" : "";
    var html = "";
    html += '<option selected value="">Choose a category</option>';
    $.map(categories, function(facet) {
      html += '<option '+selectedCategory+'>' + facet.name + '</option>';        
    });
    $("#facetselect").html(html);
  }

  // trigger results by categories on mobile device
  $('#facetselect').on('change', function() {
    var facetValue = $(this).val();
    helper.toggleRefinement('category', facetValue).search();
    // reset on default option
    if(facetValue === "") {
      helper.clearRefinements('category').search();
    } 
  });
  
  //reset categories
  $('#reset, #reset-mobile').on('click', function() {
    helper.clearRefinements('category').search();
  });

  // results par pages
  $('#select-pages').on('change', function() {
    var number = $(this).val();
    helper.setQueryParameter('hitsPerPage', number).search();
  })

  //display results by popularity
  $("#filter-select").on('change', function() {
    if($(this).val() === "Most relevant") {
      helper.setIndex('big-store').search();
    } else if($(this).val() === "Less populare") {
      helper.setIndex('big-store_rank_desc').search();
    } else if($(this).val() === "Most populare") {
      helper.setIndex('big-store_rank_asc').search();
    }
  });

  //display number of results and number of ms
  function infoResults(content) {
    var html =  "<strong>"+ content.nbHits + " results</strong> found in " + content.processingTimeMS + " ms";
    $('#info-results').html(html);
  }

});


