// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or any plugin's vendor/assets/javascripts directory can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file. JavaScript code in this file should be added after the last require_* statement.
//
// Read Sprockets README (https://github.com/rails/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require jquery
//= require jquery_ujs
//= require tether
//= require bootstrap
//= require turbolinks
//= require_tree .

$(document).ready(function() {
  var applicationID = "<%= ENV['APPLICATION_ID'] %>";
  var apiKey = "<%= ENV['API_KEY'] %>";
  var indexName = 'big-store';
  var client = algoliasearch(applicationID, apiKey);
  var helper = algoliasearchHelper(client, indexName, { facets: ['category'] });

  helper.search();

  helper.on('result', function(content) {
    renderFacetList(content);
    renderHits(content);
  });

  // trigger search with the search input
  $('#search-box').on('keyup', function() {
    var currentSearchValue = $(this).val();
    helper.setQuery(currentSearchValue).search();
  });

  // handle faceting filters
  $('#facet-list').on('click', 'input[type=checkbox]', function(e) {
    var facetValue = $(this).data('facet');
    helper.toggleRefinement('category', facetValue).search();
  });


  //display apps by lowest ranks
  $(".lowest-btn").on('click', function() {
    helper.setIndex('big-store_rank_asc').search();
  });

  //display apps by highest ranks
  $('.highest-btn').on('click', function() {
    helper.setIndex('big-store_rank_desc').search();
  });

  function renderHits(content) {
    $('#container').html(function() {
      return $.map(content.hits, function(hit) {
        return '<div class="col-xs-12 col-sm-4 items"><p>' +
          hit._highlightResult.name.value + '</p><p>' +
          hit.rank + " " + hit.category + '</p><p><a href=' + '"' + hit.link + '"' + '>Buy now</a></p></div>';
      });
    });
  }

  function renderFacetList(content) {
    $('#facet-list').html(function() {
      return $.map(content.getFacetValues('category'), function(facet) {
        var checkbox = $('<input type=checkbox>')
          .data('facet', facet.name)
          .attr('id', 'fl-' + facet.name);
        if(facet.isRefined) checkbox.attr('checked', 'checked');
        var label = $('<label>').html(facet.name + ' (' + facet.count + ')')
          .attr('for', 'fl-' + facet.name);
        return $('<li>').append(checkbox).append(label);
      });
    });
  }
});